# Simple Dockerfile for testing
FROM nginx:alpine AS runtime

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create a simple static HTML file for testing
RUN echo '<!DOCTYPE html><html><head><title>Smart Ebook Chat System</title><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><style>body { font-family: Arial, sans-serif; text-align: center; padding: 50px; } h1 { color: #333; } .status { color: #4CAF50; }</style></head><body><h1>Smart Ebook Chat System</h1><p class="status">Frontend service is running successfully!</p><p>This is a test page for the Docker container.</p></body></html>' > /usr/share/nginx/html/index.html

# Create non-root user for nginx
RUN addgroup -S nginx 2>/dev/null || true && \
    adduser -S nginx -G nginx 2>/dev/null || true

# Create directories for nginx with proper ownership
RUN mkdir -p /var/cache/nginx /var/log/nginx && \
    chown -R nginx:nginx /var/cache/nginx /var/log/nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 