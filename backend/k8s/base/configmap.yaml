apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: smart-ebook-chat
  labels:
    app.kubernetes.io/name: smart-ebook-chat-system
    app.kubernetes.io/component: backend
data:
  # Application Configuration
  API_V1_STR: "/api/v1"
  PROJECT_NAME: "Smart Ebook Chat System"
  VERSION: "1.0.0"
  
  # Database Configuration
  POSTGRES_HOST: "postgresql"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "smart_ebook_chat"
  
  # Redis Configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Qdrant Configuration
  QDRANT_HOST: "qdrant"
  QDRANT_PORT: "6333"
  
  # MinIO Configuration
  MINIO_ENDPOINT: "minio:9000"
  MINIO_BUCKET_NAME: "documents"
  MINIO_SECURE: "false"
  
  # JWT Configuration
  JWT_ALGORITHM: "HS256"
  JWT_ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  JWT_REFRESH_TOKEN_EXPIRE_DAYS: "7"
  
  # Celery Configuration
  CELERY_TASK_SERIALIZER: "json"
  CELERY_RESULT_SERIALIZER: "json"
  CELERY_ACCEPT_CONTENT: '["json"]'
  CELERY_TIMEZONE: "UTC"
  
  # File Upload Configuration
  MAX_UPLOAD_SIZE: "100MB"
  ALLOWED_EXTENSIONS: "pdf,docx,doc,txt,epub,mobi"
  UPLOAD_CHUNK_SIZE: "5MB"
  
  # Rate Limiting
  RATE_LIMIT_PER_MINUTE: "60"
  RATE_LIMIT_BURST: "10"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: smart-ebook-chat
  labels:
    app.kubernetes.io/name: smart-ebook-chat-system
    app.kubernetes.io/component: frontend
data:
  nginx.conf: |
    server {
        listen 8080;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private must-revalidate auth;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Main application
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # API proxy
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    } 